/* ========================================================================================================================================================= *
 *  v 2.0.0                                                                                                                                                  *
 *                                                               M A I N    C O M P O N E N T                                                                *
 *                                                                                                                                                           *
 * ========================================================================================================================================================= *
 *  This component installs the Shuri Ninja kit, regardless of its sub-type.                                                                                 *
 * ========================================================================================================================================================= *
 *  change-log:                                                                                                                                              *
 *  -----------                                                                                                                                              *
 *      - EE compatibility: used fl#add_kit_ee function.                                                                                                     *
 *      - Variable %GW_shuri_kit% = 1 (installs original kit) - 2 (installs may not wear heavier armor than leather) - 3 (installs may not wear any armor).  *
 *      - Handling special classic game engine restriction: kit descriptions can't exceed 4815 characters, or the game crashes at chargen!                   *
 *        So we need 2 description strref: @nnn for EE games and @1nnn for classic games. Fortunately, this is useless for English language.                 *
 *        Variable %GW_shuri_desc% = @strref + %tob_string%                                                                                                  *
 *      - Cloned and patched existing SPL files to improve compatibility.                                                                                    *
 *      - EE compatibility: added item restrictions (new sub-components).                                                                                    *
 * ========================================================================================================================================================= */

SILENT

/* ============================= *
 *              Kit              *
 * ============================= */

ADD_KIT ~SHURI~ // this is the internal name of the kit, don't bother if it isn't pretty
// CLASS WEAPON PROFICIENCIES____________________________________________________________________________________
// CLASWEAP			SMALL_SWORD	LARGE_SWORD		BLUNT       MISSILE     BOW         SPIKED      AXE         SPEAR
~SHURI                   0           1           0           1           1           0           0           0~ // BG1 proficiencies - Types d'armes autorisés
// WEAPON PROFICIENCIES______________________________________________________________________________________________________
//                                      B       T   S           F   Q             S S
//                                      A       W   C           L   U             W I T
//                      L S             S   S   O   I           A   A           T O N W
//                      A M             T L H   H   M   W       I   R           W R G O
//                      R A             A O O   A   I   A       L   T C   S     O D L -
//                      G L           M R N R   N   T   R     H M   E R L H     - & E W E E E E E E E E E E E E E E E E E E E
//                      E L       S   I D G T   D K A D H     A O   R O O O     H S W E X X X X X X X X X X X X X X X X X X X
//                      S S   S B P   S S S S   E A R A A   S L R   S S N R   S A H E A T T T T T T T T T T T T T T T T T T T
//                      W W   P L I   S W W W   D T W G M C P B N M T S G T D L N I A P R R R R R R R R R R R R R R R R R R R
//                      O O B E U K A I O O O A S A A G M L E E I A A B B B A I D E P O A A A A A A A A A A A A A A A A A A A
//                      R R O A N E X L R R R X W N K E E U A R N C F O O O R N E L O N 2 3 4 5 6 7 8 9 1 1 1 1 1 1 1 1 1 1 2
// WEAPPROF.2DA         D D W R T D E E D D D E O A I R R B R D G E F W W W T G D D N S                 0 1 2 3 4 5 6 7 8 9 0
~SHURI                  0 0 2 0 0 0 0 2 0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 2 2 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0~ // BG2 proficiencies - Compétences autorisées
// LARGE_SWORD = 2 - BOW = 2 - MISSILE = 2 - KATANA = 2 - SCIMITARWAKISASHININJATO = 2 - DAGGER = 2 - SHORTBOW = 2 - DART = 2 - SINGLE-WEAPON = 2 - TWO-WEAPONS = 3
// MINIMUM KIT STATS_______________________________________________
// ABCLASRQ.2DA         STR      DEX    CON     INT     WIS     CHR
~SHURI                   8       12      8       10      10      8~ // minimum stats for the kit. Use low values, otherwise it will be too easy to roll high stats. - Scores de caractéristiques minimaux nécessaires.
// KIT STAT MODIFIERS_______________________________________________
// ABCLSMOD.2DA         STR      DEX    CON     INT     WIS     CHR
~SHURI                   -2      2       -2      0       0       -2~ // these are the stat modifiers at character creation. Both positive an negative values are accepted. - Modificateurs des scores de caractéristiques.
// REQUIREMENTS TO DUAL TO THIS KIT________________________________
// ABDCDSRQ.2DA         STR      DEX    CON     INT     WIS     CHR
~SHURI                   0       0       0       0       0       0~ // stat requirement to dual-class *TO* this kit. - Caractéristiques minimales pour se jumeler VERS le kit.
// REQUIREMENTS TO DUAL FROM THIS KIT______________________________
// ABDCSCRQ.2DA         STR      DEX    CON     INT     WIS     CHR
~SHURI                   0       0       0       0       0       0~ // stat requirement to dual-class *FROM* this kit. - Caractéristiques minimales pour se jumeler DEPUIS le kit.
// ALIGNMENT RESTRICTIONS_________________________________________________________________
// ALIGNMNT.2DA         LG      LN      LE      NG      NN      NE      CG      CN      CE
~SHURI                   0       0       0       0       0       0       1       1       1~	// alignments that can be chosen for this kit. Listed like in ALIGNMNT.2DA and appended to the same file. - Alignements autorisés.
// DUAL CLASS OPTIONS______________________________________________
// DUALCLASS.2DA        FIG     CLE     MAG     THI     DRU     RAN
~SHURI                   0       0       0       0       0       0~ // append to DUALCLAS.2DA, check the file for reference on the listing of the classes. - Possibilités de jumelage.
// KIT ABILITIES 2DA FILE (path to CLAB-type file) - Capacités gagnées par niveau.
~%MOD_FOLDER%/2da/gwshurin.2da~
// RACIAL KIT AVAILABILITY___________________________________________________________
// KITTABLE.2DA    P = Paladin - H = Humain - E = Elf - HE = Half-Elf - HL = Halfling | For example, K_T_H means thief human and K_T_D means dwarf thief, so putting those here would make this kit selectable by those classes.
~K_T_H~ // This are the races that can choose the kit.  - Races et classes acceptant le kit.
// UNUSABLE FLAGS AND KIT BASE CLASS
// CLASSES: Mage = 1, Fighter = 2, Cleric = 3, Thief = 4, Bard = 5, Paladin 6, Druid = 11, Ranger = 12, Sorcerer = 19, Monk = 20
// KITLIST.2DA
~0x00010000     4~ // Autorisation d'objets - 0x00010000 = STALKER
// HIGH LEVEL ABILITIES ABBREVIATION: this is the name of the LU7C#K.2DA file, needed for HLAs and appended to LUABBR.2DA. - Capacités de Haut niveau.
// LUABBR.2DA
~Fi0~																						// Habiletés de Haut niveau.
// TOB STARTING EQUIPMENT_________________________________________________________________________________________________________________________________________________
// this are the item this kit is going to get at the start of ToB, appended column-wise to 25STWEAP.2DA. Check with NearInfinity, EEKeeper or DLTCEP which items you want since you'll need their code name.
//                                                                                   B                                                                                   W
//                          S                                    C            A      R                                                                                   E
//                 A        H                     R      R       L     B      M      A              A         A         A         M        M        M       M     M      A
//                 R        I        H            I      I       O     O      U      C      B       M         M         M         I        I        I       I     I      P
//                 M        E        E      B     N      N       A     O      L      E      E       M         M         M         S        S        S       S     S      O
//                 O        L        L      A     G      G       C     T      E      R      L       O         O         O         C        C        C       C     C      N
// 25STWEAP.2DA    R        D        M      G     1      2       K     S      T      S      T       1         2         3         1        2        3       4     5      1
				~LEAT20  DART03,40 HELM07 BAG26 RING06 RING31 CLCK27 BOOT01 AMUL19 BRAC10 BELT06 AROW11,40 BULL03,40 BOLT06,40 POTN52,5 POTN04,2 POTN14,5 BOW11 BOW19 XBOW06~

// CHARACTER CREATION KIT DESCRIPTION
// KITLIST.2DA
SAY @101               // LOWER = this is the all-lower case version of the kit-name (TRA'ified strings are also accepted). - Nom du kit en minuscules
SAY @102               // MIXED = this is the capitalized name of the kit. - Nom du kit en minuscules avec majuscule au début
SAY (AT GW_shuri_desc) // HELP  = this is the description of the kit. - Description du kit

// EE specific
// -----------

LAF fl#add_kit_ee
	INT_VAR
		// CLASTEXT.2DA      BIOGRAPHY - This is the biography, you can browse the dialog.tlk (with NearInfinity or DLTCEP) for the string you desire or just add your own.
//	    biography     = ~~
		// CLASTEXT.2DA       BRIEFDESC
//	    briefdesc     = ~kit_briefdesc~
		// CLASTEXT.2DA       FALLEN
		// this is a boolean check, if it's set to 1, the Kit can get Fallen, like a Paladin. If it's set to 0 it does nothing in the game. It's default value is 0.
//	    fallen        = ~0~
		// CLASTEXT.2DA       FALLEN_NOTICE
		// if you set fallen = 1, you might want to add a custom string for when the Kit's user becomes Fallen.
//	    fallen_notice = ~-1~
	STR_VAR
		// this is the internal name of your kit. #This_is_a_must (unless you want to crash the installation).
		// all the other stuff in this listing is optional, if it's there, it will be used
		// and if it isn't, the class default value will be used instead. Remove the whole "example = ~3 8 1 92~" line.
		kit_name      = ~SHURI~
		// this is the backstab progressions rate (one number/level, 40 levels), only for kits that need backstab.
		//BACKSTAB.2DA       0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50
//		backstab      = ~~                                                                                                                                   // Inherit from parent class
		// this file (CLSWPBON.2DA) contains three different fields of information, the first one is for the WPSTACK
		// (the bonus APR from Specialization and higher and from levels 7 and 13 that fighters gain)
		// if the number is 1, then it'll be enabled, if it's set to 0, it won't, enabled on Warrior classes by default.
		// the second one is turned by default over Monks, seems like it gives them their custom fists.
		// the third and last value is the amount of penalty given to the character's
		// THAC0 when using a weapon they aren't proficient with.
		// CLSWPBON.2DA		GETS_PROF_APR       UNARMED_DIVISOR     ZERO_SKILL_THAC0
//		clswpbon      = ~0                   0                   3~                                                                                          // Inherit from parent class
		// NUMWSLOT.2DA - the number of weapon slot that are displayed in the inventory
//		numwslot      = ~2~                                                                                                                                  // Inherit from parent class
		// THIEFSKL.2DA		START_POINTS       LEVEL_POINTS   -   1st value is the amount of Thieving skills point gained at level one and the 2nd is the amount gained in the following levels.
//		thiefskl      = ~~                                                                                                                                   // Inherit from parent class
		// TRAPLIMT.2DA		LIMIT   -   maximum amount of traps this kit can set (this is optional and only for Thief and Bard kits)
//		traplimt      = ~~                                                                                                                                   // Inherit from parent class
		// this is appended column-wise to CLASCOLR.2DA, the colors are listed here in this order:
		// METAL (metallic parts of the character's equipment), MINOR_CLOTH (same as Minor Color in the inventory screen),
		// MAIN_CLOTH (same as Major Color in the Inventory Screen), LEATHER (the leather parts of the character's armor),
		// ARMOR (this one is for the other parts of the armor that aren't METAL nor LETHER).
		//CLASCOLR.2DA METAL     MINOR_CLOTH     MAIN_CLOTH     LEATHER     ARMOR
		clascolr      = ~66        136             136            66          66~
		// this is the BONUS that is given to each kit/class' thieving abilities at level 1, appended column-wise to CLASISKL.2da
		// CLASISKL.2DA		PICK_POCKETS     OPEN_LOCKS     FIND_TRAPS     MOVE_SILENTLY     HIDE_IN_SHADOWS     DETECT_ILLUSION     SET_TRAPS
//		clasiskl      =		~0                0              0              0                 0                   0                   0~                   // Inherit from parent class
		// this is appended column-wise to THIEFSCL.2da, 100 determines that the player can spent Thieving Points in that thieving ability, and 0 means that they can't. Seems like it has something to do with percentages, but it's not confirmed yet.
		// THIEFSCL.2DA      PICK_POCKETS     OPEN_LOCKS     FIND_TRAPS     MOVE_SILENTLY     HIDE_IN_SHADOWS     DETECT_ILLUSION     SET_TRAPS     STEALTH
//		thiefscl      =			~100              100            100            100               100                 100                 0             0~ // Inherit from parent class
		// HPCLASS.2DA		TABLE. the HP*.2DA table's full name (not including the extension).
//		hpclass       = ~HPROG~                                                                                                                              // Inherit from parent class
		// appended to CLSRCREQ.2DA, determines which race can select the kit at character creation, values are either 1 (true/yes) and 0 (false/no), the races go like this:
		// CLSRCREQ.2DA		HUMAN               ELF                 HALF_ELF            DWARF               HALFLING            GNOME               HALFORC
		clsrcreq      =		~1                   0                   0                   0                   0                   0                   0~
		// CLASTHAC.2DA		BONUS - this is a bonus to the base THAC0 that is given at level 1 and it's permanent.
//		clasthac      = ~0~                                                                                                                                  // Inherit from parent class
		// SNEAKATT.2DA   0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50
		// this is the Sneak Attack entry, only for IWD:EE. It's like the backstab.2da, but with a function.
//		sneakatt      = ~~
		// CRIPPSTR.2DA   0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  
		// this is the Crippling Strike entry, only for IWD:EE. It's also like the backstab.2da.
//		crippstr      = ~~
END


/* ============================= *
 *            Spells             *
 * ============================= */

SILENT

// Blinding strike
// ---------------
COPY_EXISTING ~SPCL144.SPL~		~override/gwshur1.spl~ 
	SAY NAME1 @201 SAY UNIDENTIFIED_DESC @202
	LPF ALTER_SPELL_HEADER INT_VAR projectile = 1 END                                  // Removes irrelevant vanilla ARROW projectile if needed.
	LPF ALTER_SPELL_EFFECT INT_VAR silent = 1 check_globals = 0 duration_high = 10 END // Fixes duration if needed.
BUT_ONLY

// Innate Chaotic Commands
// -----------------------
COPY_EXISTING ~SPPR508.SPL~		~override/gwshur2.spl~ 
	READ_LONG  0x64 abil_off ELSE 0
	READ_ASCII (abil_off + 0x04) "bam" (8)  // reads the bam filename from ability
	WRITE_LONG 0x18 THIS | BIT14 | BIT25    // adds Non-magical ability (Ignore dead/wild magic) & Castable when silenced
	WRITE_SHORT  0x1c 4                     // sets spell type to innate (4)
	WRITE_LONG   0x34 1                     // sets spell level to 1 to avoid scripting issues
	WRITE_ASCIIE 0x3a "%bam%" #8            // writes the bam filename from abilities to spell icon
	// deletes all headers past level 1
	FOR (level = 2 ; level <= 50 ; ++level) BEGIN
		LPF DELETE_SPELL_HEADER INT_VAR min_level = level header_type = 1 END
	END
	LPF ALTER_SPELL_HEADER INT_VAR location = 4 target = 5 projectile = (IDS_OF_SYMBOL (projectl SPARKLBL) + 1) END                        // if BG2 Fixpack does not provide this fix (the last vanilla extender header projectile is SPARKGO instead of SPARKLBL)
    LPF CLONE_EFFECT INT_VAR silent = 1 check_globals = 0 match_opcode = 206 STR_VAR match_resource = ~spwi813~ resource = ~spin774~ END   // clone arcane maze to psionic maze protection (already in BG2 Fixpack)
	LPF DELETE_EFFECT INT_VAR check_globals = 0 header = 0 header_type = 1 multi_match = 1 match_opcode = 267 match_parameter1 = 16233 END // if BG2 Fixpack does not provide this fix - the first vanilla extended header contains one weird opcode #267 with parameter1 16233 (*gulp*)
	LPF ALTER_EFFECT INT_VAR silent = 1 check_globals = 0 resist_dispel = 0 END                                                            // innate ability : not dispellable.
	LPF ALTER_SPELL_EFFECT INT_VAR duration_high = 60 END                                                                                  // sets duration to 60 seconds
BUT_ONLY

// THAC0 +1
// --------
COPY ~%MOD_FOLDER%/spells/gwshur3.spl~	~override~

// Specific innate Stunning Blow and Quivering Palm abilities
// ----------------------------------------------------------
COPY_EXISTING ~SPCL811.SPL~ ~override/gwsh811.spl~
              ~SPCL820.SPL~ ~override/gwsh820.spl~ 
	LPF ALTER_EFFECT INT_VAR silent = 1 check_globals = 0 match_opcode = 248 parameter2 = 0  END // apply op#248 to any weapon wielded. (EE games: parameter2 is set to 4 - fists only)


/* =========================================================================== *
 *                             Items Restrictions                              *
 * --------------------------------------------------------------------------- *
 * GW_shuri_kit = 2 (Shuri Ninja Kit may not wear heavier armor than leather)  *
 * GW_shuri_kit = 3 (Shuri Ninja Kit may not wear any armor)                   *
 * =========================================================================== */

SILENT
ACTION_IF (is_ee) BEGIN

	COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
		TO_LOWER %DEST_RES%

		PATCH_IF (SOURCE_SIZE > 0x71) BEGIN

			READ_BYTE 0x18 flags1
			// If Movable, otherwise useless.
			PATCH_IF ((flags1 & BIT2) = BIT2) BEGIN
				GW_weapon_unusable = 0
				GW_armor_unusable = 0
				READ_SHORT 0x1c category
				READ_ASCII 0x22 animation (2)
				READ_BYTE  0x31 proficiency

				// 1. Proficiencies = 90 longsword - 91 shortsword - 102 quarterstaff - 103 crossbow - 107 sling - 115 club
				PATCH_MATCH proficiency WITH
					90 91 102 103 107 115 BEGIN
						SET GW_weapon_unusable = 1
					END
					DEFAULT
				END

				// 2. Leather armors = Shuri Ninja may not wear heavier armor than leather (GW_shuri_kit = 2) AND Shuri Ninja may not wear any armor (GW_shuri_kit = 3)
				PATCH_IF ("%animation%" STRING_EQUAL_CASE "2A") AND (GW_weapon_unusable = 0) AND (GW_shuri_kit > 1) BEGIN
					PATCH_MATCH ~%GW_shuri_kit%~ WITH
						3 BEGIN	SET GW_armor_unusable = 1 END // ~Shuri Ninja Kit may not wear any armor~
						2 BEGIN LPF ~GW_CHECK_LEATHER~ RET GW_armor_unusable = GW_unusable END END
						DEFAULT
					END
				END

				// 3. Shields = Shuri Ninja may not equip shields
				PATCH_IF (category = 12) AND (GW_armor_unusable = 0) BEGIN //AND (GW_shuri_kit > 1) 
					READ_BYTE 0x20 kit_usability_thief
					// If usable by thief ((kit_usability_thief BAND 0b01000000) == 0b00000000) - kit_usability_thief BAND `BIT6
					PATCH_IF ((kit_usability_thief & BIT6) = 0) BEGIN
						SET GW_armor_unusable = 1
					END
				END

				// 4. Patch itm only if needed
				PATCH_IF (GW_armor_unusable OR GW_weapon_unusable) BEGIN //AND (GW_shuri_kit > 1) 
					READ_BYTE 0x2b kit_usability_stalker
					// If usable by stalker
					PATCH_IF ((kit_usability_stalker & BIT0) = 0) BEGIN
//PATCH_PRINT "CONTROL ITEM PATCHED = %SOURCE_RES%"
						LPF ~ADD_ITEM_EQEFFECT~ INT_VAR opcode = 319 target = 1 timing = 2 parameter1 = IDS_OF_SYMBOL (~Kit~ ~SHURI~) parameter2 = 9 special = RESOLVE_STR_REF (@102) END
					END
				END
				
			END	// of PATCH_IF ((flags1 & BIT2) = BIT2)

		END		// of PATCH_IF (SOURCE_SIZE > 0x71)
	BUT_ONLY

END


/* ============================================================== *
 *       Adds katanas, Ninjatos and Wakizashis to the games       *
 * -------------------------------------------------------------- *
 * Otherwise the Shuri Ninja Kit is unplayable in classic games.  *
 * ============================================================== */

SILENT

// Adds 1 Katana, Ninjato and Wakizashi
ACTION_FOR_EACH store IN ~erdane~  // Erdane (AR0500 Durlag's Tower, exterior)
                         ~ulgoth~  // Bartender (AR1001 Ulgoth's Beard Store and Inn - Hurgan Stoneblade)
BEGIN

	COPY_EXISTING ~%tutu_var%%store%.sto~ ~override~

		PATCH_IF (BUFFER_LENGTH >= 0x9c) BEGIN
			PATCH_FOR_EACH sword IN ~SW1H43~ ~SW1H48~ ~SW1H46~ BEGIN
				ADD_STORE_ITEM "%sword%" AFTER ~%tutu_var%SW1H20~ #0 #0 #0 ~IDENTIFIED~ #1
			END
		END

	BUT_ONLY IF_EXISTS

END

ACTION_IF (is_classic) BEGIN

	// Adds 1 Katana, Ninjato and Wakizashi in Candlekeep Inn
	COPY_EXISTING ~%tutu_var%inn2616.sto~ ~override~

		PATCH_IF (BUFFER_LENGTH >= 0x9c) BEGIN
			PATCH_FOR_EACH sword IN ~SW1H43~ ~SW1H48~ ~SW1H46~ BEGIN
				ADD_STORE_ITEM "%sword%" AFTER ~%tutu_var%SW1H20~ #0 #0 #0 ~IDENTIFIED~ #1
			END
		END

	BUT_ONLY IF_EXISTS

	// Adds 1 Katana and Wakizashi in General Store (AR1112 Generic weapons store)
	COPY_EXISTING ~%tutu_var%sto1112.sto~ ~override~

		PATCH_IF (BUFFER_LENGTH >= 0x9c) BEGIN
			PATCH_FOR_EACH sword IN ~SW1H46~ ~SW1H43~ BEGIN
				ADD_STORE_ITEM "%sword%" BEFORE ~%tutu_var%SW2H01~ #0 #0 #0 ~IDENTIFIED~ #1
			END
		END

	BUT_ONLY IF_EXISTS

	// Adds 1 Ninjato in Nashkel Store (Storekeep in AR4803)
	COPY_EXISTING ~%tutu_var%sto4803.sto~ ~override~

		PATCH_IF (BUFFER_LENGTH >= 0x9c) BEGIN
			ADD_STORE_ITEM "SW1H48" BEFORE ~%tutu_var%SW2H01~ #0 #0 #0 ~IDENTIFIED~ #1
		END

	BUT_ONLY IF_EXISTS

	// Adds 1 Ninjato +1 in container 3 (#2) (AR0226 : BG Sewers, eastern area - ogre mage for Scar)
	COPY_EXISTING ~%ESewers%.are~ ~override~

		PATCH_IF (BUFFER_LENGTH >= 0x11b) BEGIN
 			LPF ADD_AREA_ITEM INT_VAR container_to_add_to = 3 STR_VAR item_to_add = SW1H49 END
		END

	BUT_ONLY IF_EXISTS

END


ACTION_IF (is_iwdee) BEGIN
 
	// Adds 1 Ninjato and Wakizashi in 
	ACTION_FOR_EACH store IN ~ehpomab~  // Pomab's Emporium (AR1007 Easthaven, prologue - Pomab's Emporium - first floor)
							 ~waukeen~  // The Golden Lodge (AR9103 Lonelywood - Temple of Waukeen)
	BEGIN

		COPY_EXISTING ~%store%.sto~ ~override~

			PATCH_IF (BUFFER_LENGTH >= 0x9c) BEGIN
				PATCH_FOR_EACH sword IN ~SW1H48~ ~SW1H46~ BEGIN
					ADD_STORE_ITEM "%sword%" AFTER ~SW1H43~ #0 #0 #0 ~IDENTIFIED~ #1
				END
			END

		BUT_ONLY IF_EXISTS

	END

	// Adds 1 Katana, Ninjato and Wakizashi in Conlan's Smithy (AR2103 Kuldahar - Conlan's Smithy)
	COPY_EXISTING ~kusmith.sto~ ~override~

		PATCH_IF (BUFFER_LENGTH >= 0x9c) BEGIN
			PATCH_FOR_EACH sword IN ~SW1H43~ ~SW1H48~ ~SW1H46~ BEGIN
				ADD_STORE_ITEM "%sword%" AFTER ~SCIMITA~ #0 #0 #0 ~IDENTIFIED~ #1
			END
		END

	BUT_ONLY IF_EXISTS

	// Adds 1 Scimitar, Katana, Ninjato and Wakizashi in 
	ACTION_FOR_EACH store IN ~ehinn~   // Erdane (AR1008 Easthaven, prologue - Snowdrift Inn)
							 ~emmeric~ // Emmerich's Archery (AR9104 )
							 ~hobart~  // Hobart's Trove (AR9101 Lonelywood, Whistling Gallows, first floor - AR9700 Anauroch Castle, outer courtyard - AR9715 Anauroch Castle, hideout of Hobart)
							 ~kuinn1~  // The Evening Shade (AR2114 Kuldahar - Evening Shade Inn - first floor)
							 ~kuinn2~  // id.
							 ~kuinn3~  // id.
	BEGIN

		COPY_EXISTING ~%store%.sto~ ~override~

			PATCH_IF (BUFFER_LENGTH >= 0x9c) BEGIN
				PATCH_FOR_EACH sword IN ~SW1H20~ ~SW1H48~ ~SW1H46~ ~SW1H43~ BEGIN
					ADD_STORE_ITEM "%sword%" BEFORE ~SW2H01~ #0 #0 #0 ~IDENTIFIED~ #1
				END
			END

		BUT_ONLY IF_EXISTS

	END

END
